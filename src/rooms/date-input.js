import $ from 'jquery';
import { DateManagement } from './date-management';
import { databaseAccess } from '../common/database-access'

export const dateInput = () => {
    const dateInput = $('<div id="date-picker"></div>')
    const date = new DateManagement()
    const today = date.today;

    // I could create data input to reuse, but then it would have to take 5 arguments or so
    const dateInput1 = $(`<div class="date-input">
    <label for="arrival-date">Date of arrival:</label>
    <input type="date" value="" id="arrival-date" min="${today}" max="${date.addYears(today, 1)}" required onkeypress="return false"></input>
    </div>`)
    const dateInput2 = $(`<div class="date-input">
    <label for="departure-date">Date of departure:</label>
    <input data-quantity="" data-dates="" type="date" value="" id="departure-date" min="${date.addDays(today, 1)}" max="${date.addYears(today, 1)}" disabled required></input>
    </div>`)
    //custom attributes data-quantity and data-dates to keep data generated by functions

    //block keyboard events, only way of modyfying input is through date picker
    $(dateInput).on('keydown', (e) => {
        switch (e.key) {
            case 'ArrowUp':
                return false;
            case 'ArrowDown':
                return false;
            case 'ArrowLeft':
                return false;
            case 'ArrowRight':
                return false;
            default:
                return false;
        }
    })
    // handling changes of date input
    $(dateInput).on('change', function () {
        // first reset rooms order and styles by id
        const dateOfArrival = $('#arrival-date').val()
        const dateOfDeparture = $('#departure-date').val()
        const dateDifference = date.dateDifference(dateOfDeparture, dateOfArrival)
        if (dateOfArrival !== '' && dateOfDeparture !== '') {
            $('#rooms-list').find(".room-li").each(function () {
                const id = $(this).attr('id').slice(0, 3);
                $(this).css('order', id);
                // $(this).css('background-color', '');
                $(this).find('button').prop('disabled', false);
                $(this).find('.unavailable').addClass('hidden');
            });
        }
        // handle changes to picker, departure cannot be earlier than arrival etc
        $('#departure-date').attr('min', date.addDays(dateOfArrival, 1)).attr('disabled', false)
        if (dateDifference <= 0) {
            $('#departure-date').val(date.addDays(dateOfArrival, 1))
        }

        // check if rooms are available between selected dates
        const listDateDifference = date.listDateDifference(dateOfArrival, dateOfDeparture)
        const occupiedRooms = databaseAccess.checkRooms(listDateDifference);
        $('#departure-date').attr('data-quantity', listDateDifference.length)
        $('#departure-date').attr('data-dates', JSON.stringify(listDateDifference))
        occupiedRooms.then(occRooms => {
            occRooms.map(room => {
                const li = $(`#${room}-add`).parent();
                // $(li).css('background-color', '#302d258a');
                $(li).css('order', `1${room}`);
                $(li).find('button').prop('disabled', true);
                $(li).find('.unavailable').removeClass('hidden');
            })

        })
    })
    dateInput.append(dateInput1);
    dateInput.append(dateInput2);
    return dateInput
}